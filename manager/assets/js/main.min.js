var serverUrl = "http://192.169.1.32",
    serverOnline = false,
    logsTableBot,
    logsTableSel,
    queueTable,
    statusCheckIntervalMs = 60000,
    statusChecking = false,
    icons = {
        "online": '<i class="large material-icons status-online">check_circle</i>',
        "booting": '<i class="large material-icons status-online">history</i>',
        "crashed": '<i class="large material-icons status-error">settings</i>',
        "crashed_reloading": '<i class="large material-icons status-warning">query_builder</i>',
        "offline": '<i class="large material-icons status-offline">https</i>',
        "running": '<i class="large material-icons status-running">find_replace</i>',
        "running_warnings": '<i class="large material-icons status-warning">feedback</i>',
        "ss_page_down": '<i class="large material-icons status-ssdown">event_seat</i>',
        "waiting_tasks": '<i class="large material-icons status-waiting">swap_horizontal_circle</i>',
        "_errorLoading": '<i class="large material-icons status-error">error_outline</i>',
    };

async function asyncForEach(array, callback, endCallback) {
    for (let index = 0; index < array.length; index++) {
        await callback(array[index], index, array);
        if (index == array.length - 1) {
            endCallback();
        }
    }
}

$(document).ready(function () {
    /*
     * Load everything
     */
    $('.tabs').tabs();
    $('.modal').modal();
    statusBot();
    logsTableBot = $('#logsTableBot').DataTable({
        "initComplete": function () {
            $('select').formSelect();
        },
        "language": {
            "url": "//cdn.datatables.net/plug-ins/1.10.16/i18n/Spanish.json"
        },
        "order": [[0, "desc"]]
    });
    logsTableSel = $('#logsTableSel').DataTable({
        "initComplete": function () {
            $('select').formSelect();
        },
        "language": {
            "url": "//cdn.datatables.net/plug-ins/1.10.16/i18n/Spanish.json"
        }
    });
    queueTable = $('#queueTable').DataTable({
        "initComplete": function () {
            $('select').formSelect();
        },
        "language": {
            "url": "//cdn.datatables.net/plug-ins/1.10.16/i18n/Spanish.json"
        },
        "order": [[0, "asc"]]
    });
    /*
     * Bind events
     */
    $("#statusChecker").on("click", statusBot);
    $("#rebootServerTrigger").on("click", rebootServer);
    $("#closeTrigger").on("click", closeBot);
    $("#bootTrigger").on("click", startBot);
    $("#rebootTrigger").on("click", rebootBot);
    $("#reloadLogsBot").on("click", reloadLogsBot);
    $("#reloadLogsSelenium").on("click", reloadLogsSel);
    $("#logsBotTab").on("click", loadLogsBot);
    $("#logsSelTab").on("click", loadLogsSel);
    $("#queueTab").on("click", reloadQueue);
    $("#reloadQueue").on("click", reloadQueue);
    $("#searchLogsSelBySessId").on("click", searchLogsSelBySessId);
    setInterval(statusChecker, statusCheckIntervalMs);
});

function statusChecker() {
    if (!statusChecking) {
        statusBot();
    }
}

function reloadQueue() {
    M.toast({html: 'Eliminando cola antigua...'});
    queueTable.clear().draw();
    loadQueue();
}

function addRow(table, row) {
    var logFound = false;
    table.rows().every(function (rowIdx, tableLoop, rowLoop) {
        var data = this.data();
        if (row["id"] != undefined && row["id"] == data["id"]) {
            logFound = true;
        }
    });

    if (!logFound) {
        node = table.row.add(row);
    }
}

function loadQueue() {
    $.ajax({
        method: "GET",
        url: "http://192.168.1.32/bot/queue",
        beforeSend: function () {
            $("#reloadLogsBot").attr("disabled", true);
            M.toast({html: 'Cargando cola...'});
        },
        success: function (data) {
            console.log(data);
            var queueData = data.data;
            if (data.message === "NO_QUEUE") {
                M.toast({html: 'No hay cola actualmente.'});
            }
            else {

                asyncForEach(queueData, async (queue) => {


                    var date = new Date(queue.date_added),
                        datevalues = [
                            date.getFullYear(),
                            date.getMonth() + 1,
                            date.getDate(),
                            date.getHours(),
                            date.getMinutes(),
                            date.getSeconds(),
                        ];
                    addRow(queueTable, [queue.id, queue.process_type.type, datevalues[2] + "-" + datevalues[1] + "-" + datevalues[0] + " " + datevalues[3] + ":" + datevalues[4], queue.reference_id]);
                }, function () {
                    queueTable.draw();
                    M.toast({html: '¡Logs cargados!'});
                })
            }
        },
        error: function (err) {
            console.error(err);
            M.toast({html: 'Error al cargar cola.'});
        },
        complete: function () {
            $("#reloadQueue").attr("disabled", false);
        }
    });
}

function searchLogsSelBySessId() {
    var id = parseInt($("#searchSelLogId").val());
    reloadLogsSel(id);
}

function reloadLogsSel(id = null) {
    M.toast({html: 'Eliminando logs antiguos...'});
    logsTableSel.clear().draw();
    loadLogsSel(id);
}

function loadLogsSel(id = null) {
    $.ajax({
        method: "GET",
        async: true,
        url: "http://192.168.1.32/bot/logs/selenium" + (id !== null && Number.isInteger(id) ? '/' + id : ''),
        beforeSend: function () {
            $("#reloadLogsSelenium").attr("disabled", true);
            M.toast({html: 'Cargando logs...'});
        },
        success: function (data) {
            var logs = data.data.split("\n");
            logs.reverse();

            asyncForEach(logs, async (log) => {
                addRow(logsTableSel, [log]);
            }, function () {
                logsTableSel.draw();
                M.toast({html: '¡Logs cargados!'});
            })
            ;
        },
        error: function (err) {
            console.error(err);
            M.toast({html: 'No existen logs para la sesión indicada.'});
        },
        complete: function () {
            $("#reloadLogsSelenium").attr("disabled", false);
        }
    });
}

function reloadLogsBot() {
    M.toast({html: 'Eliminando logs antiguos...'});
    logsTableBot.clear().draw();
    loadLogsBot();
}

function loadLogsBot() {
    $.ajax({
        method: "GET",
        url: "http://192.168.1.32/bot/logs/internal",
        async: true,
        beforeSend: function () {
            $("#reloadLogsBot").attr("disabled", true);
            M.toast({html: 'Cargando logs...'});
        },
        success: function (data) {
            var logs = data.data;

            asyncForEach(logs, async (log) => {
                var date = new Date(log.datetime),
                    datevalues = [
                        date.getFullYear(),
                        date.getMonth() + 1,
                        date.getDate(),
                        date.getHours(),
                        date.getMinutes(),
                        date.getSeconds(),
                    ];
                console.log(log);
                addRow(logsTableBot, [log.id,
                    datevalues[2] + "-" + datevalues[1] + "-" + datevalues[0] + " " + datevalues[3] + ":" + datevalues[4]
                    , log.message]);
            }, function () {
                logsTableBot.draw();
                M.toast({html: '¡Logs cargados!'});
            });
        },
        error: function (err) {
            console.error(err);
            M.toast({html: 'Error al cargar logs.'});
        },
        complete: function () {
            $("#reloadLogsBot").attr("disabled", false);
        }
    });
}

function setStatusLoading(msg = "Cargando estado...") {
    statusChecking = true;
    $("#status-icon").html("<br>").append($("#loading").clone());
    $("#status-msg").html("<h3>" + msg + "</h3>");
    $("#loading").removeClass("hidden");
}

function setStatus(msg, desc, icon) {
    statusChecking = false;
    $("#loading").addClass("hidden");
    $("#status-icon").html(icon);
    $("#status-msg").html(msg != "" ? "<h1>" + msg + "</h1>" : "" + desc != "" ? "<h1>" + desc + "</h1>" : "");
}

function lockAllButtons() {
    $("#rebootTrigger").attr("disabled", true);
    $("#bootTrigger").attr("disabled", true);
    $("#closeTrigger").attr("disabled", true);
    $("#statusChecker").attr("disabled", true);
}

function unlockAllButtons() {
    $("#rebootTrigger").attr("disabled", false);
    $("#bootTrigger").attr("disabled", false);
    $("#closeTrigger").attr("disabled", false);
    $("#statusChecker").attr("disabled", false);
}

function unlockOnlineButtons() {
    $("#rebootTrigger").attr("disabled", false);
    $("#bootTrigger").attr("disabled", true);
    $("#closeTrigger").attr("disabled", false);
    $("#statusChecker").attr("disabled", false);
}

function unlockOfflineButtons() {
    $("#rebootTrigger").attr("disabled", true);
    $("#bootTrigger").attr("disabled", false);
    $("#closeTrigger").attr("disabled", true);
    $("#statusChecker").attr("disabled", false);
}

function unlockLoadingButtons() {
    $("#rebootTrigger").attr("disabled", true);
    $("#bootTrigger").attr("disabled", true);
    $("#closeTrigger").attr("disabled", true);
    $("#statusChecker").attr("disabled", false);
}

function statusBot() {
    $.ajax({
        method: "GET",
        url: "http://192.168.1.32/bot/status",
        beforeSend: function () {
            setStatusLoading();
            lockAllButtons();
        },
        success: function (data) {
            var msg, desc, icon;
            switch (data.message.current_status.status) {
                case "BOOTING":
                    msg = "Iniciando...";
                    desc = "";
                    icon = icons["booting"];
                    unlockLoadingButtons();
                    break;
                case "CRASHED":
                    msg = "Crasheado";
                    desc = data.data;
                    icon = icons["crashed"];
                    unlockOnlineButtons();
                    break;
                case "CRASHED_RELOADING":
                    msg = "Crasheado (recargando)";
                    desc = data.data;
                    icon = icons["crashed_reloading"];
                    unlockLoadingButtons();
                    break;
                case "OFFLINE":
                    msg = "Desconectado";
                    desc = "";
                    icon = icons["offline"];
                    unlockOfflineButtons();
                    break;
                case "RUNNING":
                    msg = "Procesando operación";
                    desc = "";
                    icon = icons["running"];
                    unlockOnlineButtons();
                    break;
                case "RUNNING_WITH_WARNINGS":
                    msg = "Procesando operación (con advertencias)";
                    desc = "";
                    icon = icons["running_warnings"];
                    unlockOnlineButtons();
                    break;
                case "SS_PAGE_DOWN":
                    msg = "Esperando operaciones";
                    desc = "Página de la seguridad social caída";
                    icon = icons["ss_page_down"];
                    unlockOnlineButtons();
                    break;
                case "WAITING_TASKS":
                    msg = "Esperando tareas";
                    desc = "";
                    icon = icons["waiting_tasks"];
                    unlockOnlineButtons();
                    break;
                case "UNKNOWN":
                    msg = "Desconocido";
                    desc = "¿Falta el registro en server_status?";
                    icon = icons["waiting_tasks"];
                    unlockOnlineButtons();
                    break;
            }
            setStatus(msg, desc, icon);
        },
        error: function (err) {
            setStatus("Servidor (SO) offline", "Error de procesamiento con REST.", icons["_errorLoading"]);
            $("#statusChecker").attr("disabled", false);
            console.error(err);
        }
    });
}

function startBot() {
    $.ajax({
        method: "POST",
        url: "http://192.168.1.32/bot/start",
        beforeSend: function () {
            setStatusLoading("Iniciando servidor...");
            lockAllButtons();
        },
        complete: function (data) {
            console.log(data);
            if(data.responseJSON.message == "SERVER_NOT_STARTED")
            {
                setStatus("Error al iniciar", "El servidor no ha podido procesar el inicio.",  icons["crashed"]);
            }
            else
            {
                setStatus("Inicio satisfactorio", "Esperando ejecucuión...",  icons["booting"]);
            }
            setTimeout(statusBot,3000);
        }
    });
}
function rebootServer() {
    var sure = confirm("¿Estás seguro de que deseas reiniciar el servidor?");
    if(sure) {
        $.ajax({
            method: "POST",
            url: "http://192.168.1.32/server/restart",
            beforeSend: function () {
                setStatusLoading("Reiniciando sistema operativo...");
                lockAllButtons();
            },
            complete: function (data) {
                setStatus("Reinicio de sistema operativo satisfactorio.", "Reiniciando...",  icons["offline"]);
                setTimeout(statusBot,3000);
            }
        });
    }
    else {
        alert("No reiniciado.");
    }
}

function closeBot() {
    $.ajax({
        method: "POST",
        url: "http://192.168.1.32/bot/close",
        beforeSend: function () {
            setStatusLoading("Desconectando servidor...");
            lockAllButtons();
        },
        complete: function (data) {
            if(data.responseJSON.message == "SERVER_NOT_CLOSED")
            {
                setStatus("Error al detener", "El servidor no ha podido procesar el cierre.",  icons["crashed"]);
            }
            else
            {
                setStatus("Apagado satisfactorio", "Esperando ejecucuión...",  icons["offline"]);
            }
            setTimeout(statusBot,3000);
        }
    });
}

function rebootBot() {
    $.ajax({
        method: "POST",
        url: "http://192.168.1.32/bot/close",
        beforeSend: function () {
            setStatusLoading("Desconectando servidor...");
            lockAllButtons();
        },
        complete: function (data) {
            if(data.responseJSON.message == "SERVER_NOT_CLOSED")
            {
                setStatus("Error al detener", "El servidor no ha podido procesar el cierre.",  icons["crashed"]);
            }
            else
            {
                setStatus("Apagado satisfactorio", "Esperando ejecucuión...",  icons["offline"]);
                $.ajax({
                    method: "POST",
                    url: "http://192.168.1.32/bot/start",
                    beforeSend: function () {
                        setStatusLoading("Iniciando servidor...");
                        lockAllButtons();
                    },
                    complete: function () {
                        if(data.responseJSON.message == "SERVER_NOT_STARTED")
                        {
                            setStatus("Error al iniciar", "El servidor no ha podido procesar el inicio.",  icons["crashed"]);
                        }
                        else
                        {
                            setStatus("Inicio satisfactorio", "Esperando ejecucuión...",  icons["booting"]);
                        }
                        setTimeout(statusBot,3000);
                    }
                });
            }

        }
    });
}